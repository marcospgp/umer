#BlueJ class context
comment0.params=
comment0.target=Umer()
comment1.params=x\ y\ identifier\ type\ hasWaitingList
comment1.target=Vehicle\ createVehicle(double,\ double,\ java.lang.String,\ java.lang.String,\ boolean)
comment1.text=\r\n\ Cria\ um\ novo\ ve\u00EDculo\r\n\r\n\ @param\ x\ \ \ \ \ \ \ \ \ The\ initial\ x\ position\ of\ the\ vehicle\r\n\ @param\ y\ \ \ \ \ \ \ \ \ The\ initial\ y\ position\ of\ the\ vehicle\r\n\ @param\ type\ \ \ \ \ \ The\ vehicle\ type\r\n\ @param\ newDriver\ (optional)\ The\ new\ vehicle's\ driver.\ Should\ be\ null\ if\ not\ needed.\r\n
comment10.params=taxiID\ destPosX\ destPosY
comment10.target=Trip\ startTrip(java.lang.String,\ double,\ double)
comment10.text=\r\n\ Retorna\ o\ ve\u00EDculo\ com\ o\ ID\ espec\u00EDfico\ ao\ utilizador\r\n\ logado\ atualmente,\ apenas\ se\ o\ utilizador\ for\ um\ cliente\r\n
comment11.params=
comment11.target=java.lang.String[]\ getTripHistory()
comment11.text=\r\n\ Retorna\ a\ lista\ de\ viagens\ do\ utilizador\ logado\r\n\ em\ forma\ de\ ArrayList\ de\ Strings\r\n
comment12.params=
comment12.target=java.lang.String\ getTop10SpendingClients()
comment13.params=client1\ client2
comment13.target=int\ compare(Client,\ Client)
comment14.params=
comment14.target=java.lang.String\ getTop5LessReliableDrivers()
comment15.params=driver1\ driver2
comment15.target=int\ compare(Driver,\ Driver)
comment16.params=seconds
comment16.target=void\ fastForward(double)
comment17.params=driverEmail\ rating
comment17.target=void\ rateDriver(java.lang.String,\ double)
comment17.text=\r\n\ Recolhe\ o\ rating\ do\ driver\ em\ rela\u00E7\u00E3o\ \u00E0quele\ servi\u00E7o\r\n
comment18.params=available
comment18.target=void\ setAvailable(boolean)
comment18.text=\r\n\ Disponibiliza\ ou\ n\u00E3o\ um\ condutor\ para\ servi\u00E7o\r\n
comment19.params=vehicleId
comment19.target=java.lang.String\ getVehicleFinances(java.lang.String)
comment19.text=\r\n\ Devolve\ os\ lucros\ totais\ daquele\ ve\u00EDculo\r\n
comment2.params=email\ name\ password\ address\ birthdate
comment2.target=Driver\ registerDriver(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Cria\ um\ novo\ condutor\r\n
comment20.params=
comment20.target=java.lang.String[]\ getTripsUnderWay()
comment20.text=\r\n\ Retorna\ a\ lista\ de\ viagens\ underWay\r\n
comment21.params=
comment21.target=java.lang.String[]\ getAllClients()
comment21.text=\r\n\ Retorna\ a\ lista\ de\ clients\r\n
comment22.params=
comment22.target=java.lang.String[]\ getAllDrivers()
comment22.text=\r\n\ Retorna\ a\ lista\ de\ condutores\r\n
comment23.params=
comment23.target=java.lang.String[]\ getAllVehicles()
comment23.text=\r\n\ Retorna\ a\ lista\ de\ ve\u00EDculos\r\n
comment24.params=
comment24.target=java.lang.String\ getTimeNow()
comment24.text=\r\n\ Retorna\ o\ tempo\ agora\r\n
comment25.params=frame
comment25.target=void\ mainLoop(GUI)
comment26.params=args
comment26.target=void\ main(java.lang.String[])
comment27.params=
comment27.target=void\ run()
comment3.params=email\ name\ password\ address\ birthdate\ posX\ posY
comment3.target=Client\ registerClient(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ double,\ double)
comment3.text=\r\n\ Cria\ um\ novo\ cliente\r\n
comment4.params=driverEmail\ vehicleIdentifier
comment4.target=void\ assignDriverToVehicle(java.lang.String,\ java.lang.String)
comment4.text=\r\n\ Ocupa\ um\ ve\u00EDculo\ com\ um\ dado\ condutor\r\n
comment5.params=email\ password
comment5.target=java.lang.Boolean\ login(java.lang.String,\ java.lang.String)
comment5.text=\r\n\ Tenta\ fazer\ login\ numa\ conta\ de\ utilizador\r\n\r\n\ @param\ email\ \ \ O\ email\ do\ utilizador\r\n\ @param\ passord\ A\ password\ do\ utilizador\r\n\ @return\ \ \ \ \ \ \ \ True\ se\ o\ user\ for\ um\ condutor,\ false\ se\ for\ um\ cliente,\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ null\ caso\ o\ login\ tenha\ sido\ inv\u00E1lido.\r\n
comment6.params=
comment6.target=boolean\ logout()
comment6.text=\r\n\ Tenta\ fazer\ logout\ de\ um\ utilizador\r\n\r\n\ @return\ \ \ \ \ \ \ \ True\ se\ o\ logout\ foi\ bem\ sucedido,\ caso\ contr\u00E1rio\ \u00E9\ retornado\ false\r\n
comment7.params=taxiID
comment7.target=boolean\ isTaxiAvailable(java.lang.String)
comment7.text=\r\n\ Retorna\ true\ caso\ exista\ o\ veiculo\ com\ aquele\ ID\ e\ esteja\ dispon\u00EDvel.\r\n\ Serve\ de\ guarda\ para\ quando\ chamamos\ certo\ veiculo,\ para\ que\ nao\ seja\r\n\ feito\ o\ pedido\ de\ viagem\ a\ um\ veiculo\ que\ nao\ existe\ ou\ esta\ indisponivel.\r\n
comment8.params=
comment8.target=boolean\ isSomeTaxiAvailable()
comment8.text=\r\n\ Retorna\ true\ caso\ exista\ algum\ veiculo\ dispon\u00EDvel.\r\n\ Serve\ de\ guarda\ para\ quando\ chamamos\ qualquer\ veiculo,\ para\ que\ nao\ seja\r\n\ feito\ o\ pedido\ de\ viagem\ a\ um\ veiculo\ que\ nao\ existe\ ou\ esta\ indisponivel.\r\n
comment9.params=
comment9.target=Vehicle\ getNearestReadyVehicle()
comment9.text=\r\n\ Retorna\ o\ ve\u00EDculo\ pronto\ a\ viajar\ mais\ pr\u00F3ximo\ do\ utilizador\r\n\ logado\ atualmente,\ apenas\ se\ o\ utilizador\ for\ um\ cliente\r\n
numComments=28
