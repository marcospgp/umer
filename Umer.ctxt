#BlueJ class context
comment0.target=Umer
comment0.text=\r\n\ O\ Umer\ \u00E9\ um\ programa\ que\ permite\ efetuar\ a\ ger\u00EAncia\ de\ viagens\ entre\ clientes\ e\ motoristas.\r\n\ Esta\ \u00E9\ a\ classe\ principal\ que\ gere\ o\ programa.\r\n\r\n\ @author\ Marcos\ Pereira,\ S\u00E9rgio\ Oliveira,\ V\u00EDtor\ Castro\r\n\ @version\ 0.1\r\n\ @since\ 2017-04-23\r\n
comment1.params=
comment1.target=Umer()
comment10.params=
comment10.target=Vehicle\ getNearestReadyVehicle()
comment10.text=\r\n\ Retorna\ o\ ve\u00EDculo\ pronto\ a\ viajar\ mais\ pr\u00F3ximo\ do\ utilizador\r\n\ logado\ atualmente,\ apenas\ se\ o\ utilizador\ for\ um\ cliente\r\n
comment11.params=taxiIdentifier
comment11.target=Vehicle\ getSpecificVehicle(java.lang.String)
comment11.text=\r\n\ Retorna\ o\ ve\u00EDculo\ com\ o\ ID\ espec\u00EDfico\ ao\ utilizador\r\n\ logado\ atualmente,\ apenas\ se\ o\ utilizador\ for\ um\ cliente\r\n
comment12.params=taxiID\ destPosX\ destPosY
comment12.target=Trip\ startTrip(java.lang.String,\ double,\ double)
comment12.text=\r\n\ Retorna\ o\ ve\u00EDculo\ com\ o\ ID\ espec\u00EDfico\ ao\ utilizador\r\n\ logado\ atualmente,\ apenas\ se\ o\ utilizador\ for\ um\ cliente\r\n
comment13.params=
comment13.target=java.util.ArrayList\ getTripHistory()
comment13.text=\r\n\ Retorna\ a\ lista\ de\ viagens\ do\ utilizador\ logado\r\n\ em\ forma\ de\ ArrayList\ de\ Strings\r\n
comment14.params=args
comment14.target=void\ main(java.lang.String[])
comment15.params=
comment15.target=void\ run()
comment2.params=x\ y\ identifier\ type
comment2.target=Vehicle\ createVehicle(double,\ double,\ java.lang.String,\ java.lang.String)
comment2.text=\r\n\ Cria\ um\ novo\ ve\u00EDculo\r\n\r\n\ @param\ x\ \ \ \ \ \ \ \ \ The\ initial\ x\ position\ of\ the\ vehicle\r\n\ @param\ y\ \ \ \ \ \ \ \ \ The\ initial\ y\ position\ of\ the\ vehicle\r\n\ @param\ type\ \ \ \ \ \ The\ vehicle\ type\r\n\ @param\ newDriver\ (optional)\ The\ new\ vehicle's\ driver.\ Should\ be\ null\ if\ not\ needed.\r\n
comment3.params=email\ name\ password\ address\ birthdate
comment3.target=Driver\ registerDriver(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment3.text=\r\n\ Cria\ um\ novo\ condutor\r\n
comment4.params=email\ name\ password\ address\ birthdate\ posX\ posY
comment4.target=Client\ registerClient(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ double,\ double)
comment4.text=\r\n\ Cria\ um\ novo\ cliente\r\n
comment5.params=driverEmail\ vehicleIdentifier
comment5.target=void\ assignDriverToVehicle(java.lang.String,\ java.lang.String)
comment5.text=\r\n\ Ocupa\ um\ ve\u00EDculo\ com\ um\ dado\ condutor\r\n
comment6.params=email\ password
comment6.target=java.lang.Boolean\ login(java.lang.String,\ java.lang.String)
comment6.text=\r\n\ Tenta\ fazer\ login\ numa\ conta\ de\ utilizador\r\n\r\n\ @param\ email\ \ \ O\ email\ do\ utilizador\r\n\ @param\ passord\ A\ password\ do\ utilizador\r\n\ @return\ \ \ \ \ \ \ \ True\ se\ o\ login\ foi\ bem\ sucedido,\ caso\ contr\u00E1rio\ \u00E9\ retornado\ false\r\n
comment7.params=
comment7.target=boolean\ logout()
comment7.text=\r\n\ Tenta\ fazer\ logout\ de\ um\ utilizador\r\n\r\n\ @return\ \ \ \ \ \ \ \ True\ se\ o\ logout\ foi\ bem\ sucedido,\ caso\ contr\u00E1rio\ \u00E9\ retornado\ false\r\n
comment8.params=taxiID
comment8.target=boolean\ taxiIsAvailable(java.lang.String)
comment8.text=\r\n\ Retorna\ true\ caso\ exista\ o\ veiculo\ com\ aquele\ ID\ e\ esteja\ dispon\u00EDvel.\r\n\ Serve\ de\ guarda\ para\ quando\ chamamos\ certo\ veiculo,\ para\ que\ nao\ seja\r\n\ feito\ o\ pedido\ de\ viagem\ a\ um\ veiculo\ que\ nao\ existe\ ou\ esta\ indisponivel.\r\n
comment9.params=
comment9.target=boolean\ someTaxiIsAvailable()
comment9.text=\r\n\ Retorna\ true\ caso\ exista\ algum\ veiculo\ dispon\u00EDvel.\r\n\ Serve\ de\ guarda\ para\ quando\ chamamos\ qualquer\ veiculo,\ para\ que\ nao\ seja\r\n\ feito\ o\ pedido\ de\ viagem\ a\ um\ veiculo\ que\ nao\ existe\ ou\ esta\ indisponivel.\r\n
numComments=16
